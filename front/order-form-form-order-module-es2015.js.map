{"version":3,"sources":["./src/app/pages/voicebot/order/form/form-order-routing.module.ts","./src/app/pages/voicebot/order/form/form-order.component.ts","./src/app/pages/voicebot/order/form/form-order.component.html","./src/app/pages/voicebot/order/form/form-order.module.ts"],"names":[],"mappings":"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","file":"order-form-form-order-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { VexRoutes } from '../../../../../@vex/interfaces/vex-route.interface';\r\nimport { FormOrderComponent } from './form-order.component';\r\n\r\nconst routes: VexRoutes = [\r\n  {\r\n    path: '',\r\n    component: FormOrderComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FormOrderRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { fadeInUp400ms } from '../../../../../@vex/animations/fade-in-up.animation';\r\nimport { stagger60ms } from '../../../../../@vex/animations/stagger.animation';\r\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\r\nimport icPlus from '@iconify/icons-fa-solid/plus';\r\nimport icMinus from '@iconify/icons-fa-solid/minus';\r\nimport icList from '@iconify/icons-ic/baseline-list-alt';\r\n\r\nimport { ProductService } from '../../../../services/voicebot/bot/bot.service';\r\nimport { UtilService } from '../../../../services/utils/util/util.service';\r\nimport { Breadcrumb } from '../../../../interfaces/utils/Breadcrumb';\r\nimport {\r\n  FormProduct,\r\n  FieldTypeVoicebot,\r\n  FormOrder,\r\n} from '../../../../interfaces/voicebot/field-type-voicebot';\r\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n\r\nimport icReupload from '@iconify/icons-ic/baseline-file-upload';\r\nimport { WhareService } from 'src/app/services/wharehouse/wharehouse.service';\r\nimport { BotResponse } from 'src/app/interfaces/voicebot/bot-response';\r\n\r\n@Component({\r\n  selector: 'vex-form-bot',\r\n  templateUrl: './form-order.component.html',\r\n  styleUrls: ['./form-order.component.scss'],\r\n  animations: [stagger60ms, fadeInUp400ms],\r\n})\r\nexport class FormOrderComponent implements OnInit {\r\n  //-------------------\r\n  formGroup: FormGroup;\r\n  submitted = false;\r\n  isNew = true;\r\n  visible = false;\r\n  //-------------------\r\n\r\n  icMoreVert = icMoreVert;\r\n  icPlus = icPlus;\r\n  icMinus = icMinus;\r\n  icList = icList;\r\n  icReupload = icReupload;\r\n  products: BotResponse[] = [];\r\n\r\n  //form: any;\r\n\r\n  breadcrumbs: Breadcrumb[];\r\n\r\n  fields: FieldTypeVoicebot[];\r\n  field: FieldTypeVoicebot;\r\n\r\n  loading = false;\r\n  form: FormOrder;\r\n\r\n  id: string;\r\n\r\n  percentage: Observable<number>;\r\n\r\n  urlFile: string;\r\n  publicUrl: any = '';\r\n\r\n  btnSubmit: 'Add' | 'Modify' = 'Add';\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private productService: ProductService,\r\n    private util: UtilService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private whareHouse: WhareService,\r\n    private botService: ProductService\r\n  ) {\r\n    const idWhareHouse = this.whareHouse.selectedWharehouse$.getValue();\r\n    this.botService\r\n      .listProductsByWhareHouse(idWhareHouse.id)\r\n      .subscribe((response) => {\r\n        this.products = response;\r\n      });\r\n\r\n    if (this.route.snapshot.paramMap.get('id') !== null) {\r\n      this.id = this.route.snapshot.paramMap.get('id');\r\n\r\n      this.breadcrumbs = [\r\n        { url: '/voicebot/bots', text: 'Products' },\r\n        {\r\n          url: '/voicebot/bot/' + this.id,\r\n          text: 'Edit Product',\r\n        },\r\n      ];\r\n    } else {\r\n      this.breadcrumbs = [\r\n        { url: '/voicebot/bots', text: 'Products' },\r\n        {\r\n          url: '/voicebot/bots/',\r\n          text: 'Add product',\r\n        },\r\n      ];\r\n    }\r\n\r\n    const clase = this;\r\n    if (this.id !== undefined) {\r\n      const product = this.router.getCurrentNavigation().extras\r\n        .state as BotResponse;\r\n      this.btnSubmit = 'Modify';\r\n      this.isNew = false;\r\n      clase.util.openMessage('Bot Cargado!', 'Completado', 'Primary');\r\n      this.breadcrumbs[1].text = product.name;\r\n      clase.formGroup = this.formBuilder.group({\r\n        name: [product.name, [Validators.required]],\r\n\r\n        coordinates: this.formBuilder.array([]),\r\n      });\r\n    } else {\r\n      this.formGroup = this.formBuilder.group({\r\n        name: ['', [Validators.required]],\r\n\r\n        coordinates: this.formBuilder.array([]),\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  newExtraCoordinate() {\r\n    return this.formBuilder.group({\r\n      product: ['', [Validators.required]],\r\n      amount: ['', [Validators.required, Validators.min(1)]],\r\n    });\r\n  }\r\n\r\n  addField(groupControl: string) {\r\n    let newExtraField;\r\n    const control = <FormArray>this.formGroup.controls[groupControl];\r\n\r\n    newExtraField = this.newExtraCoordinate();\r\n    control.push(newExtraField);\r\n  }\r\n\r\n  deleteField(i: number, groupControl: string) {\r\n    this.gerArrayForms(groupControl).removeAt(i);\r\n  }\r\n\r\n  gerArrayForms(control: string) {\r\n    return this.formGroup.get(control) as FormArray;\r\n  }\r\n\r\n  redirectListBots(): void {\r\n    const url = `/voicebot/bots/`;\r\n    this.router.navigate([url]);\r\n  }\r\n\r\n  submitHandler() {\r\n    this.submitted = true;\r\n    const clase = this;\r\n\r\n    this.form = this.formGroup.value;\r\n    this.form.detail = this.formGroup.controls.coordinates.value;\r\n    this.form.number = this.create_UUID();\r\n\r\n    this.form.wharehouse = this.whareHouse.selectedWharehouse$.getValue().id;\r\n    if (!this.formGroup.invalid) {\r\n      if (this.isNew === true) {\r\n        this.productService.addOrder(this.form).subscribe((response) => {\r\n          clase.util.openMessage('ADDED!', 'Complete', 'Primary');\r\n          clase.redirectListBots();\r\n          clase.loading = false;\r\n        });\r\n      } else {\r\n      }\r\n    } else {\r\n      clase.util.openMessage('Please Validate the information', 'Error');\r\n    }\r\n  }\r\n\r\n  get f() {\r\n    return this.formGroup.controls;\r\n  }\r\n\r\n  selectProduct($event, index) {\r\n    const maxAmount = this.products.find((p) => p.id === $event.value).amount;\r\n    const control = <FormArray>this.formGroup.controls['coordinates'];\r\n    control.controls[index]\r\n      .get('amount')\r\n      .setValidators([\r\n        Validators.required,\r\n        Validators.min(1),\r\n        Validators.max(maxAmount),\r\n      ]);\r\n  }\r\n\r\n  create_UUID(): string {\r\n    var dt = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\r\n      /[xy]/g,\r\n      function (c) {\r\n        var r = (dt + Math.random() * 16) % 16 | 0;\r\n        dt = Math.floor(dt / 16);\r\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n      }\r\n    );\r\n    return uuid;\r\n  }\r\n}\r\n","<vex-secondary-toolbar current=\"Voicebots\">\r\n  <vex-breadcrumbs [crumbs]=\"breadcrumbs\" fxFlex=\"auto\"></vex-breadcrumbs>\r\n\r\n  <button\r\n    class=\"ml-2\"\r\n    color=\"primary\"\r\n    mat-button\r\n    type=\"button\"\r\n    (click)=\"redirectListBots()\"\r\n  >\r\n    See everything\r\n    <mat-icon [icIcon]=\"icList\"></mat-icon>\r\n  </button>\r\n</vex-secondary-toolbar>\r\n\r\n<div *ngIf=\"percentage | async as pct\">\r\n  <mat-progress-bar\r\n    mode=\"buffer\"\r\n    [value]=\"pct\"\r\n    color=\"primary\"\r\n  ></mat-progress-bar>\r\n</div>\r\n\r\n<div [@stagger]=\"true\" class=\"p-gutter\" vexContainer>\r\n  <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\">\r\n    <div @fadeInUp class=\"card\" fxFlex=\"auto\" *ngIf=\"formGroup !== undefined\">\r\n      <form [formGroup]=\"formGroup\" (submit)=\"submitHandler()\">\r\n        <div\r\n          class=\"px-6 py-4 border-t\"\r\n          fxLayout=\"row\"\r\n          fxLayoutAlign=\"start center\"\r\n        >\r\n          <h2 class=\"title m-0\">Basic input</h2>\r\n        </div>\r\n\r\n        <div class=\"px-6 pt-4\" fxLayout=\"column\">\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayout.lt-sm=\"column\"\r\n            fxLayoutGap=\"16px\"\r\n            fxLayoutGap.lt-sm=\"0\"\r\n          >\r\n            <mat-form-field fxFlex=\"auto\">\r\n              <mat-label>name</mat-label>\r\n              <input matInput formControlName=\"name\" />\r\n            </mat-form-field>\r\n\r\n            <!-- <mat-form-field color=\"primary\" fxFlex=\"auto\">\r\n              <mat-label>Tipo Bot</mat-label>\r\n              <mat-select formControlName=\"typeBot\">\r\n                <mat-option value=\"10\">Nombre - Apellido (tts)</mat-option>\r\n                <mat-option value=\"8\">Nombre - Apellido</mat-option>\r\n              </mat-select>\r\n            </mat-form-field> -->\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"px-6 pt-4 border-t\"\r\n          fxLayout=\"row\"\r\n          fxLayoutAlign=\"start center\"\r\n        >\r\n          <h2 class=\"title m-0\" fxFlex=\"auto\">Products</h2>\r\n          <button\r\n            class=\"ml-2 hover:bg-hover\"\r\n            color=\"primary\"\r\n            mat-icon-button\r\n            type=\"button\"\r\n            (click)=\"addField('coordinates')\"\r\n          >\r\n            <mat-icon [icIcon]=\"icPlus\" width=\"16px\" height=\"16px\"></mat-icon>\r\n          </button>\r\n        </div>\r\n\r\n        <div\r\n          formArrayName=\"coordinates\"\r\n          *ngIf=\"this.gerArrayForms('coordinates').length >= 1\"\r\n        >\r\n          <div\r\n            *ngFor=\"\r\n              let element of gerArrayForms('coordinates').controls;\r\n              let i = index\r\n            \"\r\n            [formGroupName]=\"i\"\r\n            class=\"px-6 py-1\"\r\n            fxLayout=\"column\"\r\n          >\r\n            <div\r\n              fxLayout=\"row\"\r\n              fxLayout.lt-sm=\"column\"\r\n              fxLayoutGap=\"16px\"\r\n              fxLayoutGap.lt-sm=\"0\"\r\n            >\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Product</mat-label>\r\n\r\n                <mat-select\r\n                  matSelect\r\n                  (selectionChange)=\"selectProduct($event, i)\"\r\n                  formControlName=\"product\"\r\n                  name=\"product\"\r\n                >\r\n                  <mat-option *ngFor=\"let p of products\" [value]=\"p.id\">\r\n                    {{ p.name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Amount</mat-label>\r\n                <input matInput formControlName=\"amount\" type=\"number\" />\r\n              </mat-form-field>\r\n\r\n              <button\r\n                class=\"ml-2 hover:bg-hover\"\r\n                color=\"accent\"\r\n                mat-icon-button\r\n                type=\"button\"\r\n                (click)=\"deleteField(i, 'coordinates')\"\r\n              >\r\n                <mat-icon\r\n                  [icIcon]=\"icMinus\"\r\n                  width=\"16px\"\r\n                  height=\"16px\"\r\n                ></mat-icon>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"px-6 py-4\" fxLayout=\"column\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\r\n            <button color=\"primary\" mat-raised-button type=\"submit\">\r\n              {{ btnSubmit }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormOrderComponent } from './form-order.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { IconModule } from '@visurel/iconify-angular';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { SecondaryToolbarModule } from '../../../../../@vex/components/secondary-toolbar/secondary-toolbar.module';\r\nimport { BreadcrumbsModule } from '../../../../../@vex/components/breadcrumbs/breadcrumbs.module';\r\nimport { ContainerModule } from '../../../../../@vex/directives/container/container.module';\r\nimport { FormOrderRoutingModule } from './form-order-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\n@NgModule({\r\n  declarations: [FormOrderComponent],\r\n  imports: [\r\n    MatFormFieldModule,\r\n    FormOrderRoutingModule,\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    IconModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatSlideToggleModule,\r\n    SecondaryToolbarModule,\r\n    BreadcrumbsModule,\r\n    ContainerModule,\r\n    FormsModule,\r\n    MatProgressBarModule,\r\n  ],\r\n})\r\nexport class FormOrderModule {}\r\n"],"sourceRoot":"webpack:///"}