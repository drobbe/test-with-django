{"version":3,"sources":["webpack:///src/app/pages/voicebot/order/form/form-order-routing.module.ts","webpack:///src/app/pages/voicebot/order/form/form-order.component.ts","webpack:///src/app/pages/voicebot/order/form/form-order.component.html","webpack:///src/app/pages/voicebot/order/form/form-order.module.ts"],"names":["routes","path","component","FormOrderRoutingModule","forChild","FormOrderComponent","formBuilder","productService","util","route","router","whareHouse","botService","submitted","isNew","visible","icMoreVert","icPlus","icMinus","icList","icReupload","products","loading","publicUrl","btnSubmit","idWhareHouse","selectedWharehouse$","getValue","listProductsByWhareHouse","id","subscribe","response","snapshot","paramMap","get","breadcrumbs","url","text","clase","undefined","product","getCurrentNavigation","extras","state","openMessage","name","formGroup","group","required","coordinates","array","amount","min","groupControl","newExtraField","control","controls","newExtraCoordinate","push","i","gerArrayForms","removeAt","navigate","form","value","detail","number","create_UUID","wharehouse","invalid","addOrder","redirectListBots","$event","index","maxAmount","find","p","setValidators","max","dt","Date","getTime","uuid","replace","c","r","Math","random","floor","toString","FormOrderModule"],"mappings":"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","file":"order-form-form-order-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { VexRoutes } from '../../../../../@vex/interfaces/vex-route.interface';\r\nimport { FormOrderComponent } from './form-order.component';\r\n\r\nconst routes: VexRoutes = [\r\n  {\r\n    path: '',\r\n    component: FormOrderComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FormOrderRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { fadeInUp400ms } from '../../../../../@vex/animations/fade-in-up.animation';\r\nimport { stagger60ms } from '../../../../../@vex/animations/stagger.animation';\r\nimport icMoreVert from '@iconify/icons-ic/twotone-more-vert';\r\nimport icPlus from '@iconify/icons-fa-solid/plus';\r\nimport icMinus from '@iconify/icons-fa-solid/minus';\r\nimport icList from '@iconify/icons-ic/baseline-list-alt';\r\n\r\nimport { ProductService } from '../../../../services/voicebot/bot/bot.service';\r\nimport { UtilService } from '../../../../services/utils/util/util.service';\r\nimport { Breadcrumb } from '../../../../interfaces/utils/Breadcrumb';\r\nimport {\r\n  FormProduct,\r\n  FieldTypeVoicebot,\r\n  FormOrder,\r\n} from '../../../../interfaces/voicebot/field-type-voicebot';\r\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n\r\nimport icReupload from '@iconify/icons-ic/baseline-file-upload';\r\nimport { WhareService } from 'src/app/services/wharehouse/wharehouse.service';\r\nimport { BotResponse } from 'src/app/interfaces/voicebot/bot-response';\r\n\r\n@Component({\r\n  selector: 'vex-form-bot',\r\n  templateUrl: './form-order.component.html',\r\n  styleUrls: ['./form-order.component.scss'],\r\n  animations: [stagger60ms, fadeInUp400ms],\r\n})\r\nexport class FormOrderComponent implements OnInit {\r\n  //-------------------\r\n  formGroup: FormGroup;\r\n  submitted = false;\r\n  isNew = true;\r\n  visible = false;\r\n  //-------------------\r\n\r\n  icMoreVert = icMoreVert;\r\n  icPlus = icPlus;\r\n  icMinus = icMinus;\r\n  icList = icList;\r\n  icReupload = icReupload;\r\n  products: BotResponse[] = [];\r\n\r\n  //form: any;\r\n\r\n  breadcrumbs: Breadcrumb[];\r\n\r\n  fields: FieldTypeVoicebot[];\r\n  field: FieldTypeVoicebot;\r\n\r\n  loading = false;\r\n  form: FormOrder;\r\n\r\n  id: string;\r\n\r\n  percentage: Observable<number>;\r\n\r\n  urlFile: string;\r\n  publicUrl: any = '';\r\n\r\n  btnSubmit: 'Add' | 'Modify' = 'Add';\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private productService: ProductService,\r\n    private util: UtilService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private whareHouse: WhareService,\r\n    private botService: ProductService\r\n  ) {\r\n    const idWhareHouse = this.whareHouse.selectedWharehouse$.getValue();\r\n    this.botService\r\n      .listProductsByWhareHouse(idWhareHouse.id)\r\n      .subscribe((response) => {\r\n        this.products = response;\r\n      });\r\n\r\n    if (this.route.snapshot.paramMap.get('id') !== null) {\r\n      this.id = this.route.snapshot.paramMap.get('id');\r\n\r\n      this.breadcrumbs = [\r\n        { url: '/voicebot/bots', text: 'Products' },\r\n        {\r\n          url: '/voicebot/bot/' + this.id,\r\n          text: 'Edit Product',\r\n        },\r\n      ];\r\n    } else {\r\n      this.breadcrumbs = [\r\n        { url: '/voicebot/bots', text: 'Products' },\r\n        {\r\n          url: '/voicebot/bots/',\r\n          text: 'Add product',\r\n        },\r\n      ];\r\n    }\r\n\r\n    const clase = this;\r\n    if (this.id !== undefined) {\r\n      const product = this.router.getCurrentNavigation().extras\r\n        .state as BotResponse;\r\n      this.btnSubmit = 'Modify';\r\n      this.isNew = false;\r\n      clase.util.openMessage('Bot Cargado!', 'Completado', 'Primary');\r\n      this.breadcrumbs[1].text = product.name;\r\n      clase.formGroup = this.formBuilder.group({\r\n        name: [product.name, [Validators.required]],\r\n\r\n        coordinates: this.formBuilder.array([]),\r\n      });\r\n    } else {\r\n      this.formGroup = this.formBuilder.group({\r\n        name: ['', [Validators.required]],\r\n\r\n        coordinates: this.formBuilder.array([]),\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  newExtraCoordinate() {\r\n    return this.formBuilder.group({\r\n      product: ['', [Validators.required]],\r\n      amount: ['', [Validators.required, Validators.min(1)]],\r\n    });\r\n  }\r\n\r\n  addField(groupControl: string) {\r\n    let newExtraField;\r\n    const control = <FormArray>this.formGroup.controls[groupControl];\r\n\r\n    newExtraField = this.newExtraCoordinate();\r\n    control.push(newExtraField);\r\n  }\r\n\r\n  deleteField(i: number, groupControl: string) {\r\n    this.gerArrayForms(groupControl).removeAt(i);\r\n  }\r\n\r\n  gerArrayForms(control: string) {\r\n    return this.formGroup.get(control) as FormArray;\r\n  }\r\n\r\n  redirectListBots(): void {\r\n    const url = `/voicebot/bots/`;\r\n    this.router.navigate([url]);\r\n  }\r\n\r\n  submitHandler() {\r\n    this.submitted = true;\r\n    const clase = this;\r\n\r\n    this.form = this.formGroup.value;\r\n    this.form.detail = this.formGroup.controls.coordinates.value;\r\n    this.form.number = this.create_UUID();\r\n\r\n    this.form.wharehouse = this.whareHouse.selectedWharehouse$.getValue().id;\r\n    if (!this.formGroup.invalid) {\r\n      if (this.isNew === true) {\r\n        this.productService.addOrder(this.form).subscribe((response) => {\r\n          clase.util.openMessage('ADDED!', 'Complete', 'Primary');\r\n          clase.redirectListBots();\r\n          clase.loading = false;\r\n        });\r\n      } else {\r\n      }\r\n    } else {\r\n      clase.util.openMessage('Please Validate the information', 'Error');\r\n    }\r\n  }\r\n\r\n  get f() {\r\n    return this.formGroup.controls;\r\n  }\r\n\r\n  selectProduct($event, index) {\r\n    const maxAmount = this.products.find((p) => p.id === $event.value).amount;\r\n    const control = <FormArray>this.formGroup.controls['coordinates'];\r\n    control.controls[index]\r\n      .get('amount')\r\n      .setValidators([\r\n        Validators.required,\r\n        Validators.min(1),\r\n        Validators.max(maxAmount),\r\n      ]);\r\n  }\r\n\r\n  create_UUID(): string {\r\n    var dt = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\r\n      /[xy]/g,\r\n      function (c) {\r\n        var r = (dt + Math.random() * 16) % 16 | 0;\r\n        dt = Math.floor(dt / 16);\r\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n      }\r\n    );\r\n    return uuid;\r\n  }\r\n}\r\n","<vex-secondary-toolbar current=\"Voicebots\">\r\n  <vex-breadcrumbs [crumbs]=\"breadcrumbs\" fxFlex=\"auto\"></vex-breadcrumbs>\r\n\r\n  <button\r\n    class=\"ml-2\"\r\n    color=\"primary\"\r\n    mat-button\r\n    type=\"button\"\r\n    (click)=\"redirectListBots()\"\r\n  >\r\n    See everything\r\n    <mat-icon [icIcon]=\"icList\"></mat-icon>\r\n  </button>\r\n</vex-secondary-toolbar>\r\n\r\n<div *ngIf=\"percentage | async as pct\">\r\n  <mat-progress-bar\r\n    mode=\"buffer\"\r\n    [value]=\"pct\"\r\n    color=\"primary\"\r\n  ></mat-progress-bar>\r\n</div>\r\n\r\n<div [@stagger]=\"true\" class=\"p-gutter\" vexContainer>\r\n  <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\">\r\n    <div @fadeInUp class=\"card\" fxFlex=\"auto\" *ngIf=\"formGroup !== undefined\">\r\n      <form [formGroup]=\"formGroup\" (submit)=\"submitHandler()\">\r\n        <div\r\n          class=\"px-6 py-4 border-t\"\r\n          fxLayout=\"row\"\r\n          fxLayoutAlign=\"start center\"\r\n        >\r\n          <h2 class=\"title m-0\">Basic input</h2>\r\n        </div>\r\n\r\n        <div class=\"px-6 pt-4\" fxLayout=\"column\">\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayout.lt-sm=\"column\"\r\n            fxLayoutGap=\"16px\"\r\n            fxLayoutGap.lt-sm=\"0\"\r\n          >\r\n            <mat-form-field fxFlex=\"auto\">\r\n              <mat-label>name</mat-label>\r\n              <input matInput formControlName=\"name\" />\r\n            </mat-form-field>\r\n\r\n            <!-- <mat-form-field color=\"primary\" fxFlex=\"auto\">\r\n              <mat-label>Tipo Bot</mat-label>\r\n              <mat-select formControlName=\"typeBot\">\r\n                <mat-option value=\"10\">Nombre - Apellido (tts)</mat-option>\r\n                <mat-option value=\"8\">Nombre - Apellido</mat-option>\r\n              </mat-select>\r\n            </mat-form-field> -->\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"px-6 pt-4 border-t\"\r\n          fxLayout=\"row\"\r\n          fxLayoutAlign=\"start center\"\r\n        >\r\n          <h2 class=\"title m-0\" fxFlex=\"auto\">Products</h2>\r\n          <button\r\n            class=\"ml-2 hover:bg-hover\"\r\n            color=\"primary\"\r\n            mat-icon-button\r\n            type=\"button\"\r\n            (click)=\"addField('coordinates')\"\r\n          >\r\n            <mat-icon [icIcon]=\"icPlus\" width=\"16px\" height=\"16px\"></mat-icon>\r\n          </button>\r\n        </div>\r\n\r\n        <div\r\n          formArrayName=\"coordinates\"\r\n          *ngIf=\"this.gerArrayForms('coordinates').length >= 1\"\r\n        >\r\n          <div\r\n            *ngFor=\"\r\n              let element of gerArrayForms('coordinates').controls;\r\n              let i = index\r\n            \"\r\n            [formGroupName]=\"i\"\r\n            class=\"px-6 py-1\"\r\n            fxLayout=\"column\"\r\n          >\r\n            <div\r\n              fxLayout=\"row\"\r\n              fxLayout.lt-sm=\"column\"\r\n              fxLayoutGap=\"16px\"\r\n              fxLayoutGap.lt-sm=\"0\"\r\n            >\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Product</mat-label>\r\n\r\n                <mat-select\r\n                  matSelect\r\n                  (selectionChange)=\"selectProduct($event, i)\"\r\n                  formControlName=\"product\"\r\n                  name=\"product\"\r\n                >\r\n                  <mat-option *ngFor=\"let p of products\" [value]=\"p.id\">\r\n                    {{ p.name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field fxFlex=\"auto\">\r\n                <mat-label>Amount</mat-label>\r\n                <input matInput formControlName=\"amount\" type=\"number\" />\r\n              </mat-form-field>\r\n\r\n              <button\r\n                class=\"ml-2 hover:bg-hover\"\r\n                color=\"accent\"\r\n                mat-icon-button\r\n                type=\"button\"\r\n                (click)=\"deleteField(i, 'coordinates')\"\r\n              >\r\n                <mat-icon\r\n                  [icIcon]=\"icMinus\"\r\n                  width=\"16px\"\r\n                  height=\"16px\"\r\n                ></mat-icon>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"px-6 py-4\" fxLayout=\"column\">\r\n          <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\r\n            <button color=\"primary\" mat-raised-button type=\"submit\">\r\n              {{ btnSubmit }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormOrderComponent } from './form-order.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { IconModule } from '@visurel/iconify-angular';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { SecondaryToolbarModule } from '../../../../../@vex/components/secondary-toolbar/secondary-toolbar.module';\r\nimport { BreadcrumbsModule } from '../../../../../@vex/components/breadcrumbs/breadcrumbs.module';\r\nimport { ContainerModule } from '../../../../../@vex/directives/container/container.module';\r\nimport { FormOrderRoutingModule } from './form-order-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\n@NgModule({\r\n  declarations: [FormOrderComponent],\r\n  imports: [\r\n    MatFormFieldModule,\r\n    FormOrderRoutingModule,\r\n    CommonModule,\r\n    FlexLayoutModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    IconModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatSlideToggleModule,\r\n    SecondaryToolbarModule,\r\n    BreadcrumbsModule,\r\n    ContainerModule,\r\n    FormsModule,\r\n    MatProgressBarModule,\r\n  ],\r\n})\r\nexport class FormOrderModule {}\r\n"]}