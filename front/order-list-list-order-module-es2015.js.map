{"version":3,"sources":["./src/app/pages/voicebot/order/list/list-order-routing.module.ts","./src/app/pages/voicebot/order/list/list-order.component.ts","./src/app/pages/voicebot/order/list/list-order.component.html","./src/app/pages/voicebot/order/list/list-order.module.ts"],"names":[],"mappings":"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","file":"order-list-list-order-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { VexRoutes } from '../../../../../@vex/interfaces/vex-route.interface';\r\nimport { ListOrderComponent } from './list-order.component';\r\n\r\nconst routes: VexRoutes = [\r\n  {\r\n    path: '',\r\n    component: ListOrderComponent,\r\n    data: {\r\n      toolbarShadowEnabled: true,\r\n    },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ListOrderRoutingModule {}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\nimport { Campaign } from '../../../../interfaces/voicebot/campaign.model';\r\n\r\nimport { Gestion } from '../../../../interfaces/voicebot/gestion.model';\r\nimport { Modal } from '../../../../interfaces/utils/Modal';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { TableColumn } from '../../../../interfaces/utils/Table-column';\r\nimport {\r\n  BotResponse,\r\n  ccsStyleByTypeField,\r\n  getNameTypeField,\r\n  OrderResponse,\r\n} from '../../../../interfaces/voicebot/bot-response';\r\nimport { UserData } from '../../../../interfaces/utils/User-data';\r\n\r\nimport icEdit from '@iconify/icons-ic/twotone-edit';\r\nimport icDelete from '@iconify/icons-ic/twotone-delete';\r\nimport icSearch from '@iconify/icons-ic/twotone-search';\r\nimport icAdd from '@iconify/icons-ic/twotone-add';\r\nimport icFilterList from '@iconify/icons-ic/twotone-filter-list';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport icMoreHoriz from '@iconify/icons-ic/twotone-more-horiz';\r\nimport icFolder from '@iconify/icons-ic/twotone-folder';\r\nimport { fadeInUp400ms } from '../../../../../@vex/animations/fade-in-up.animation';\r\n\r\nimport {\r\n  MAT_FORM_FIELD_DEFAULT_OPTIONS,\r\n  MatFormFieldDefaultOptions,\r\n} from '@angular/material/form-field';\r\nimport { stagger40ms } from '../../../../../@vex/animations/stagger.animation';\r\nimport { FormControl } from '@angular/forms';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\n\r\nimport icPlus from '@iconify/icons-ic/baseline-plus';\r\nimport icRefresh from '@iconify/icons-ic/baseline-refresh';\r\nimport icHeadset from '@iconify/icons-ic/twotone-headset';\r\nimport icLoad from '@iconify/icons-ic/twotone-sync';\r\nimport { UtilService } from 'src/app/services/utils/util/util.service';\r\nimport { Router } from '@angular/router';\r\nimport { ProductService } from 'src/app/services/voicebot/bot/bot.service';\r\nimport {\r\n  FieldTypeVoicebot,\r\n  FormProduct,\r\n} from 'src/app/interfaces/voicebot/field-type-voicebot';\r\nimport { WhareService } from 'src/app/services/wharehouse/wharehouse.service';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'list-bot-table',\r\n  templateUrl: './list-order.component.html',\r\n  styleUrls: ['./list-order.component.scss'],\r\n  animations: [fadeInUp400ms, stagger40ms],\r\n  providers: [\r\n    {\r\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\r\n      useValue: {\r\n        appearance: 'standard',\r\n      } as MatFormFieldDefaultOptions,\r\n    },\r\n  ],\r\n})\r\nexport class ListOrderComponent implements OnInit, AfterViewInit {\r\n  layoutCtrl = new FormControl('fullwidth');\r\n\r\n  subject$: ReplaySubject<BotResponse[]> = new ReplaySubject<BotResponse[]>(1);\r\n  data$: Observable<BotResponse[]> = this.subject$.asObservable();\r\n  Campaigns: BotResponse[];\r\n  CampañasArchivada: BotResponse[];\r\n  Gestiones: Gestion[];\r\n  modal: Modal;\r\n\r\n  userData: UserData;\r\n\r\n  loading = true;\r\n  loadingTabla = true;\r\n\r\n  @Input()\r\n  columns: TableColumn<OrderResponse>[] = [\r\n    {\r\n      label: 'Name',\r\n      property: 'name',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['font-bold', 'text-secondary'],\r\n    },\r\n    {\r\n      label: 'Number',\r\n      property: 'number',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['font-medium', 'text-secondary'],\r\n    },\r\n    {\r\n      label: 'Detail',\r\n      property: 'detail',\r\n      type: 'badge',\r\n      visible: true,\r\n      cssClasses: ['font-medium', 'text-secondary'],\r\n    },\r\n    { label: 'Actions', property: 'actions', type: 'button', visible: true },\r\n  ];\r\n  pageSize = 10;\r\n  pageSizeOptions: number[] = [10, 15, 20, 25];\r\n\r\n  dataSource: MatTableDataSource<BotResponse> | null;\r\n  selection = new SelectionModel<BotResponse>(true, []);\r\n\r\n  searchCtrl = new FormControl();\r\n\r\n  campaign: Campaign;\r\n\r\n  icFilterList = icFilterList;\r\n  //Iconos\r\n  icEdit = icEdit;\r\n  icSearch = icSearch;\r\n  icDelete = icDelete;\r\n  icAdd = icAdd;\r\n  icMoreHoriz = icMoreHoriz;\r\n  icHeadset = icHeadset;\r\n  icLoad = icLoad;\r\n  icPlus = icPlus;\r\n  icRefresh = icRefresh;\r\n  products: BotResponse[] = [];\r\n\r\n  //Final de iconos\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  //paginatitor archivada\r\n  @ViewChild('categoryPaginator', { read: MatPaginator })\r\n  categoryPaginator: MatPaginator;\r\n\r\n  constructor(\r\n    private botService: ProductService,\r\n    private router: Router,\r\n    private whareHouseService: WhareService\r\n  ) {\r\n    const idWhareHouse = this.whareHouseService.selectedWharehouse$.getValue();\r\n    this.botService\r\n      .listProductsByWhareHouse(idWhareHouse.id)\r\n      .subscribe((response) => {\r\n        this.products = response;\r\n      });\r\n  }\r\n\r\n  get visibleColumns() {\r\n    return this.columns\r\n      .filter((column) => column.visible)\r\n      .map((column) => column.property);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MatTableDataSource();\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    let clase = this;\r\n    this.Campaigns = [];\r\n    this.loading = true;\r\n    const idWhareHouse = this.whareHouseService.selectedWharehouse$.getValue();\r\n    this.botService\r\n      .listOrderByWhareHouse(idWhareHouse.id)\r\n      .subscribe((response) => {\r\n        clase.dataSource.data = response;\r\n        this.loading = false;\r\n        clase.loadingTabla = false;\r\n        this.searchCtrl.valueChanges\r\n          .pipe(untilDestroyed(this))\r\n          .subscribe((value) => this.onFilterChange(value));\r\n      });\r\n  }\r\n\r\n  refreshDatabutton() {\r\n    //TIENR QUE Refrescar\r\n    //alert('Refrescar');\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  removeItemFromDatasoucre(dataSource: any, index: number) {\r\n    const paginator = dataSource.paginatitor;\r\n    dataSource.data.splice(index, 1);\r\n    dataSource.paginator = paginator;\r\n  }\r\n\r\n  onFilterChange(value: string) {\r\n    if (!this.dataSource) {\r\n      return;\r\n    }\r\n    value = value.trim();\r\n    value = value.toLowerCase();\r\n    this.dataSource.filter = value;\r\n  }\r\n\r\n  toggleColumnVisibility(column, event) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    column.visible = !column.visible;\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.data.forEach((row) => this.selection.select(row));\r\n  }\r\n\r\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\r\n    return column.property;\r\n  }\r\n\r\n  goToNew() {\r\n    const url = `/system/order/new`;\r\n    this.router.navigate([url]);\r\n  }\r\n\r\n  // editBot(product: BotResponse) {\r\n  //   const url = `/voicebot/order/${product.id}`;\r\n  //   this.router.navigate([url], { state: product });\r\n  // }\r\n\r\n  getProductName(id: number) {\r\n    return this.products.find((p) => p.id === id).name;\r\n  }\r\n}\r\n","<vex-page-layout>\r\n  <vex-secondary-toolbar current=\"Orders List\">\r\n    <vex-breadcrumbs [crumbs]=\"['Orders']\" fxFlex=\"auto\"></vex-breadcrumbs>\r\n\r\n    <button\r\n      class=\"ml-2\"\r\n      color=\"primary\"\r\n      mat-button\r\n      type=\"button\"\r\n      (click)=\"goToNew()\"\r\n    >\r\n      Add Order\r\n      <mat-icon [icIcon]=\"icPlus\"></mat-icon>\r\n    </button>\r\n  </vex-secondary-toolbar>\r\n\r\n  <div @fadeInUp class=\"p-gutter\">\r\n    <div\r\n      class=\"bg-app-bar px-6 h-16 border-b sticky left-0\"\r\n      fxLayout=\"row\"\r\n      fxLayoutAlign=\"start center\"\r\n    >\r\n      <div\r\n        class=\"bg-card rounded-full border px-4\"\r\n        fxFlex=\"400px\"\r\n        fxFlex.lt-md=\"auto\"\r\n        fxHide.xs\r\n        fxLayout=\"row\"\r\n        fxLayoutAlign=\"start center\"\r\n      >\r\n        <ic-icon [icIcon]=\"icSearch\" size=\"20px\"></ic-icon>\r\n        <input\r\n          [formControl]=\"searchCtrl\"\r\n          class=\"px-4 py-3 border-0 outline-none w-full bg-transparent\"\r\n          placeholder=\"Buscar...\"\r\n          type=\"Buscar\"\r\n        />\r\n      </div>\r\n\r\n      <span fxFlex></span>\r\n\r\n      <button\r\n        class=\"ml-4\"\r\n        fxFlex=\"none\"\r\n        fxHide.gt-xs\r\n        mat-icon-button\r\n        type=\"button\"\r\n      >\r\n        <mat-icon [icIcon]=\"icSearch\"></mat-icon>\r\n      </button>\r\n\r\n      <button\r\n        [matMenuTriggerFor]=\"columnFilterMenu\"\r\n        class=\"ml-4\"\r\n        fxFlex=\"none\"\r\n        mat-icon-button\r\n        matTooltip=\"Filter Columns\"\r\n        type=\"button\"\r\n      >\r\n        <mat-icon [icIcon]=\"icFilterList\"></mat-icon>\r\n      </button>\r\n\r\n      <button\r\n        (click)=\"getData()\"\r\n        *ngIf=\"loadingTabla === false\"\r\n        class=\"ml-4\"\r\n        color=\"primary\"\r\n        fxFlex=\"none\"\r\n        mat-mini-fab\r\n        matTooltip=\"Refresh\"\r\n        type=\"button\"\r\n      >\r\n        <mat-icon [icIcon]=\"icRefresh\"></mat-icon>\r\n      </button>\r\n\r\n      <button\r\n        *ngIf=\"loadingTabla === true\"\r\n        class=\"ml-4\"\r\n        color=\"primary\"\r\n        fxFlex=\"none\"\r\n        mat-mini-fab\r\n        matTooltip=\"Cargando..\"\r\n        disabled=\"true;\"\r\n        type=\"button\"\r\n      >\r\n        <mat-icon [icIcon]=\"icLoad\" class=\"animate-spin\"></mat-icon>\r\n      </button>\r\n    </div>\r\n    <mat-tab-group>\r\n      <mat-tab label=\"Table\">\r\n        <table\r\n          @stagger\r\n          [dataSource]=\"dataSource\"\r\n          class=\"w-full\"\r\n          mat-table\r\n          matSort\r\n        >\r\n          <ng-container matColumnDef=\"checkbox\">\r\n            <th *matHeaderCellDef mat-header-cell>\r\n              <mat-checkbox\r\n                (change)=\"$event ? masterToggle() : null\"\r\n                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                color=\"primary\"\r\n              >\r\n              </mat-checkbox>\r\n            </th>\r\n            <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\r\n              <mat-checkbox\r\n                (change)=\"$event ? selection.toggle(row) : null\"\r\n                (click)=\"$event.stopPropagation()\"\r\n                [checked]=\"selection.isSelected(row)\"\r\n                color=\"primary\"\r\n              >\r\n              </mat-checkbox>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Text Columns -->\r\n          <ng-container\r\n            *ngFor=\"let column of columns; trackBy: trackByProperty\"\r\n          >\r\n            <ng-container\r\n              *ngIf=\"column.type === 'text' && column.property !== 'Telefonias'\"\r\n              [matColumnDef]=\"column.property\"\r\n            >\r\n              <th\r\n                *matHeaderCellDef\r\n                class=\"uppercase\"\r\n                mat-header-cell\r\n                mat-sort-header\r\n              >\r\n                {{ column.label }}\r\n              </th>\r\n              <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\r\n                {{ row[column.property] }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container\r\n              *ngIf=\"column.type === 'text' && column.property === 'Telefonias'\"\r\n              [matColumnDef]=\"column.property\"\r\n            >\r\n              <th\r\n                *matHeaderCellDef\r\n                class=\"uppercase\"\r\n                mat-header-cell\r\n                mat-sort-header\r\n              >\r\n                {{ column.label }}\r\n              </th>\r\n              <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\r\n                <p class=\"smallText\" *ngFor=\"let telefonia of row.Telefonias\">\r\n                  {{ telefonia.name }}\r\n                </p>\r\n              </td>\r\n            </ng-container>\r\n          </ng-container>\r\n\r\n          <!-- Label Column -->\r\n          <ng-container matColumnDef=\"detail\">\r\n            <th\r\n              *matHeaderCellDef\r\n              class=\"uppercase\"\r\n              mat-header-cell\r\n              mat-sort-header\r\n            >\r\n              Detail\r\n            </th>\r\n            <td *matCellDef=\"let row\" mat-cell>\r\n              <div\r\n                (click)=\"$event.stopPropagation()\"\r\n                fxLayoutAlign=\"start center\"\r\n                fxLayoutGap=\"4px\"\r\n              >\r\n                <div\r\n                  *ngFor=\"let field of row.detail\"\r\n                  class=\"rounded px-2 py-1 mr-1 font-medium text-xs\"\r\n                  fxFlex=\"none\"\r\n                  [ngClass]=\"['text-primary', 'bg-primary-light']\"\r\n                  matTooltip=\"Details\"\r\n                >\r\n                  {{ field.amount + \" - \" + getProductName(field.product) }}\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Action Column -->\r\n          <ng-container matColumnDef=\"actions\">\r\n            <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n            <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\r\n              <button\r\n                (click)=\"$event.stopPropagation()\"\r\n                [matMenuTriggerData]=\"{ Campaign: row }\"\r\n                [matMenuTriggerFor]=\"actionsMenu\"\r\n                mat-icon-button\r\n                type=\"button\"\r\n              >\r\n                <mat-icon [icIcon]=\"icMoreHoriz\"></mat-icon>\r\n              </button>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\r\n          <tr\r\n            *matRowDef=\"let row; columns: visibleColumns\"\r\n            @fadeInUp\r\n            class=\"hover:bg-hover trans-ease-out cursor-pointer\"\r\n            mat-row\r\n          ></tr>\r\n        </table>\r\n\r\n        <mat-paginator\r\n          [pageSizeOptions]=\"pageSizeOptions\"\r\n          [pageSize]=\"pageSize\"\r\n          class=\"sticky left-0\"\r\n        ></mat-paginator>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</vex-page-layout>\r\n\r\n<mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <ng-template let-Campaign=\"Campaign\" matMenuContent>\r\n    <!-- <button mat-menu-item (click)=\"editBot(Campaign)\">\r\n      <mat-icon [icIcon]=\"icEdit\"></mat-icon>\r\n      <span>Edit 2</span>\r\n    </button> -->\r\n  </ng-template>\r\n</mat-menu>\r\n\r\n<mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <button\r\n    (click)=\"toggleColumnVisibility(column, $event)\"\r\n    *ngFor=\"let column of columns\"\r\n    class=\"checkbox-item mat-menu-item\"\r\n  >\r\n    <mat-checkbox\r\n      (click)=\"$event.stopPropagation()\"\r\n      [(ngModel)]=\"column.visible\"\r\n      color=\"primary\"\r\n    >\r\n      {{ column.label }}\r\n    </mat-checkbox>\r\n  </button>\r\n</mat-menu>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ListOrderRoutingModule } from './list-order-routing.module';\r\nimport { ListOrderComponent } from './list-order.component';\r\nimport { PageLayoutModule } from '../../../../../@vex/components/page-layout/page-layout.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { BreadcrumbsModule } from '../../../../../@vex/components/breadcrumbs/breadcrumbs.module';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { IconModule } from '@visurel/iconify-angular';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { ContainerModule } from '../../../../../@vex/directives/container/container.module';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { ProgressBarModule } from '../../../../../@vex/components/progress-bar/progress-bar.module';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { SecondaryToolbarModule } from 'src/@vex/components/secondary-toolbar/secondary-toolbar.module';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\n\r\n@NgModule({\r\n  declarations: [ListOrderComponent],\r\n  imports: [\r\n    MatProgressBarModule,\r\n    ProgressBarModule,\r\n    CommonModule,\r\n    ListOrderRoutingModule,\r\n    PageLayoutModule,\r\n    FlexLayoutModule,\r\n    BreadcrumbsModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    IconModule,\r\n    FormsModule,\r\n    MatTooltipModule,\r\n    ReactiveFormsModule,\r\n    ContainerModule,\r\n    MatSelectModule,\r\n    SecondaryToolbarModule,\r\n    MatTabsModule,\r\n  ],\r\n})\r\nexport class ListProductModule {}\r\n"],"sourceRoot":"webpack:///"}