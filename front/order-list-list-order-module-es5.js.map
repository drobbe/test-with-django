{"version":3,"sources":["webpack:///src/app/pages/voicebot/order/list/list-order-routing.module.ts","webpack:///src/app/pages/voicebot/order/list/list-order.component.html","webpack:///src/app/pages/voicebot/order/list/list-order.component.ts","webpack:///src/app/pages/voicebot/order/list/list-order.module.ts"],"names":["routes","path","component","data","toolbarShadowEnabled","ListOrderRoutingModule","forChild","selection","$event","stopPropagation","ListOrderComponent","botService","router","whareHouseService","layoutCtrl","subject$","data$","asObservable","loading","loadingTabla","columns","label","property","type","visible","cssClasses","pageSize","pageSizeOptions","searchCtrl","icFilterList","icEdit","icSearch","icDelete","icAdd","icMoreHoriz","icHeadset","icLoad","icPlus","icRefresh","products","idWhareHouse","selectedWharehouse$","getValue","listProductsByWhareHouse","id","subscribe","response","dataSource","getData","clase","Campaigns","listOrderByWhareHouse","valueChanges","pipe","value","onFilterChange","paginator","sort","index","paginatitor","splice","trim","toLowerCase","filter","column","event","stopImmediatePropagation","numSelected","selected","length","numRows","isAllSelected","clear","forEach","row","select","url","navigate","find","p","name","map","provide","useValue","appearance","goToNew","ListProductModule"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,UAAMA,MAAM,GAAc,CACxB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,wEAFb;AAGEC,YAAI,EAAE;AACJC,8BAAoB,EAAE;AADlB;AAHR,OADwB,CAA1B;;AAcO;AAAA,YAAMC,sBAAN;AAAA;AAAA;;;gBAAMA;;;;6BAAAA,sB;AAAsB,W;AAAA,oBAHxB,CAAC,6DAAaC,QAAb,CAAsBN,MAAtB,CAAD,CAGwB,EAFvB,4DAEuB;;;OAA5B;;;4HAAMK,sB,EAAsB;AAAA;AAAA,oBAFvB,4DAEuB;AAAA,S;AAFX,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC6ClB;;AACE;AAAA;;AAAA;;AAAA;AAAA;;AASA;;AACF;;;;;;AADY;;AAAA;;;;;;AAGZ;;AAUE;;AACF;;;;;;AADY;;AAAA;;;;;;;;AAaN;;AACE;;AACE;AAAA;;AAAA;;AAAA,qDAAoC,IAApC;AAAwC,WAAxC;;AAKF;;AACF;;;;;;AALI;;AAAA,qIAAmD,eAAnD,EAAmD,sDAAnD;;;;;;;;AAMJ;;AACE;;AACE;AAAA;;AAAA;;AAAA;;AAAA,4BAAmB,QAAAE,SAAA,gBAAnB,GAA2C,IAA3C;AAA+C,WAA/C,EAAgD,OAAhD,EAAgD;AAAA;;AAAA,mBACvCC,MAAM,CAACC,eAAP,EADuC;AACf,WADjC;;AAKF;;AACF;;;;;;;;AAJI;;AAAA;;;;;;AAeF;;AAME;;AACF;;;;;;AADE;;AAAA;;;;;;AAEF;;AACE;;AACF;;;;;;;;AAF0B;;AACxB;;AAAA;;;;;;AAbJ;;AAIE;;AAQA;;AAGF;;;;;;AAbE;;;;;;AAmBA;;AAME;;AACF;;;;;;AADE;;AAAA;;;;;;AAGA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAFJ;;AACE;;AAGF;;;;;;;;AAJ0B;;AACH;;AAAA;;;;;;AAbzB;;AAIE;;AAQA;;AAKF;;;;;;AAfE;;;;;;AAtBJ;;AAGE;;AAiBA;;AAkBF;;;;;;AAlCI;;AAAA;;AAiBA;;AAAA;;;;;;AAqBF;;AAME;;AACF;;;;;;;;;;AAOI;;AAOE;;AACF;;;;;;;;AAJE;;AAGA;;AAAA;;;;;;;;AAbN;;AACE;;AACE;AAAA;;AAAA,mBAASD,MAAM,CAACC,eAAP,EAAT;AAAiC,WAAjC;;AAIA;;AASF;;AACF;;;;;;AATM;;AAAA;;;;;;AAcN;;;;;;;;;;;;;;AACA;;AACE;;AACE;AAAA;;AAAA,mBAASD,MAAM,CAACC,eAAP,EAAT;AAAiC,WAAjC;;AAMA;;AACF;;AACF;;;;;;;;;;AAPI;;AAAA,yKAAwC,mBAAxC,EAAwC,IAAxC;;AAKU;;AAAA;;;;;;AAKhB;;;;;;AACA;;;;AAEE;;;;;;;;;;AA0BV;;AACE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAIA;;AACE;AAAA;;AAAA,mBAASD,MAAM,CAACC,eAAP,EAAT;AAAiC,WAAjC,EAAkC,eAAlC,EAAkC;AAAA;;AAAA;AAAA;AAAA,WAAlC;;AAIA;;AACF;;AACF;;;;;;AALI;;AAAA;;AAGA;;AAAA;;;;;;;;;YC7KOC,kBAAkB;AAwE7B,sCACUC,UADV,EAEUC,MAFV,EAGUC,iBAHV,EAGyC;AAAA;;AAAA;;AAF/B,iBAAAF,UAAA,GAAAA,UAAA;AACA,iBAAAC,MAAA,GAAAA,MAAA;AACA,iBAAAC,iBAAA,GAAAA,iBAAA;AA1EV,iBAAAC,UAAA,GAAa,IAAI,2DAAJ,CAAgB,WAAhB,CAAb;AAEA,iBAAAC,QAAA,GAAyC,IAAI,kDAAJ,CAAiC,CAAjC,CAAzC;AACA,iBAAAC,KAAA,GAAmC,KAAKD,QAAL,CAAcE,YAAd,EAAnC;AAQA,iBAAAC,OAAA,GAAU,IAAV;AACA,iBAAAC,YAAA,GAAe,IAAf;AAGA,iBAAAC,OAAA,GAAwC,CACtC;AACEC,mBAAK,EAAE,MADT;AAEEC,sBAAQ,EAAE,MAFZ;AAGEC,kBAAI,EAAE,MAHR;AAIEC,qBAAO,EAAE,IAJX;AAKEC,wBAAU,EAAE,CAAC,WAAD,EAAc,gBAAd;AALd,aADsC,EAQtC;AACEJ,mBAAK,EAAE,QADT;AAEEC,sBAAQ,EAAE,QAFZ;AAGEC,kBAAI,EAAE,MAHR;AAIEC,qBAAO,EAAE,IAJX;AAKEC,wBAAU,EAAE,CAAC,aAAD,EAAgB,gBAAhB;AALd,aARsC,EAetC;AACEJ,mBAAK,EAAE,QADT;AAEEC,sBAAQ,EAAE,QAFZ;AAGEC,kBAAI,EAAE,OAHR;AAIEC,qBAAO,EAAE,IAJX;AAKEC,wBAAU,EAAE,CAAC,aAAD,EAAgB,gBAAhB;AALd,aAfsC,EAsBtC;AAAEJ,mBAAK,EAAE,SAAT;AAAoBC,sBAAQ,EAAE,SAA9B;AAAyCC,kBAAI,EAAE,QAA/C;AAAyDC,qBAAO,EAAE;AAAlE,aAtBsC,CAAxC;AAwBA,iBAAAE,QAAA,GAAW,EAAX;AACA,iBAAAC,eAAA,GAA4B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAA5B;AAGA,iBAAApB,SAAA,GAAY,IAAI,wEAAJ,CAAgC,IAAhC,EAAsC,EAAtC,CAAZ;AAEA,iBAAAqB,UAAA,GAAa,IAAI,2DAAJ,EAAb;AAIA,iBAAAC,YAAA,GAAe,6EAAf,CAyByC,CAxBzC;;AACA,iBAAAC,MAAA,GAAS,qEAAT;AACA,iBAAAC,QAAA,GAAW,uEAAX;AACA,iBAAAC,QAAA,GAAW,uEAAX;AACA,iBAAAC,KAAA,GAAQ,oEAAR;AACA,iBAAAC,WAAA,GAAc,4EAAd;AACA,iBAAAC,SAAA,GAAY,yEAAZ;AACA,iBAAAC,MAAA,GAAS,sEAAT;AACA,iBAAAC,MAAA,GAAS,uEAAT;AACA,iBAAAC,SAAA,GAAY,0EAAZ;AACA,iBAAAC,QAAA,GAA0B,EAA1B;AAgBE,gBAAMC,YAAY,GAAG,KAAK3B,iBAAL,CAAuB4B,mBAAvB,CAA2CC,QAA3C,EAArB;AACA,iBAAK/B,UAAL,CACGgC,wBADH,CAC4BH,YAAY,CAACI,EADzC,EAEGC,SAFH,CAEa,UAACC,QAAD,EAAc;AACvB,mBAAI,CAACP,QAAL,GAAgBO,QAAhB;AACD,aAJH;AAKD;;AAnF4B;AAAA;AAAA,uCA2FlB;AACT,mBAAKC,UAAL,GAAkB,IAAI,0EAAJ,EAAlB;AACA,mBAAKC,OAAL;AACD;AA9F4B;AAAA;AAAA,sCAgGnB;AAAA;;AACR,kBAAIC,KAAK,GAAG,IAAZ;AACA,mBAAKC,SAAL,GAAiB,EAAjB;AACA,mBAAKhC,OAAL,GAAe,IAAf;AACA,kBAAMsB,YAAY,GAAG,KAAK3B,iBAAL,CAAuB4B,mBAAvB,CAA2CC,QAA3C,EAArB;AACA,mBAAK/B,UAAL,CACGwC,qBADH,CACyBX,YAAY,CAACI,EADtC,EAEGC,SAFH,CAEa,UAACC,QAAD,EAAc;AACvBG,qBAAK,CAACF,UAAN,CAAiB5C,IAAjB,GAAwB2C,QAAxB;AACA,sBAAI,CAAC5B,OAAL,GAAe,KAAf;AACA+B,qBAAK,CAAC9B,YAAN,GAAqB,KAArB;;AACA,sBAAI,CAACS,UAAL,CAAgBwB,YAAhB,CACGC,IADH,CACQ,8EAAe,MAAf,CADR,EAEGR,SAFH,CAEa,UAACS,KAAD;AAAA,yBAAW,MAAI,CAACC,cAAL,CAAoBD,KAApB,CAAX;AAAA,iBAFb;AAGD,eATH;AAUD;AA/G4B;AAAA;AAAA,gDAiHT,CAClB;AACA;AACD;AApH4B;AAAA;AAAA,8CAsHX;AAChB,mBAAKP,UAAL,CAAgBS,SAAhB,GAA4B,KAAKA,SAAjC;AACA,mBAAKT,UAAL,CAAgBU,IAAhB,GAAuB,KAAKA,IAA5B;AACD;AAzH4B;AAAA;AAAA,qDA2HJV,UA3HI,EA2HaW,KA3Hb,EA2H4B;AACvD,kBAAMF,SAAS,GAAGT,UAAU,CAACY,WAA7B;AACAZ,wBAAU,CAAC5C,IAAX,CAAgByD,MAAhB,CAAuBF,KAAvB,EAA8B,CAA9B;AACAX,wBAAU,CAACS,SAAX,GAAuBA,SAAvB;AACD;AA/H4B;AAAA;AAAA,2CAiIdF,KAjIc,EAiIC;AAC5B,kBAAI,CAAC,KAAKP,UAAV,EAAsB;AACpB;AACD;;AACDO,mBAAK,GAAGA,KAAK,CAACO,IAAN,EAAR;AACAP,mBAAK,GAAGA,KAAK,CAACQ,WAAN,EAAR;AACA,mBAAKf,UAAL,CAAgBgB,MAAhB,GAAyBT,KAAzB;AACD;AAxI4B;AAAA;AAAA,mDA0INU,MA1IM,EA0IEC,KA1IF,EA0IS;AACpCA,mBAAK,CAACxD,eAAN;AACAwD,mBAAK,CAACC,wBAAN;AACAF,oBAAM,CAACxC,OAAP,GAAiB,CAACwC,MAAM,CAACxC,OAAzB;AACD;AAED;;AAhJ6B;AAAA;AAAA,4CAiJb;AACd,kBAAM2C,WAAW,GAAG,KAAK5D,SAAL,CAAe6D,QAAf,CAAwBC,MAA5C;AACA,kBAAMC,OAAO,GAAG,KAAKvB,UAAL,CAAgB5C,IAAhB,CAAqBkE,MAArC;AACA,qBAAOF,WAAW,KAAKG,OAAvB;AACD;AAED;;AAvJ6B;AAAA;AAAA,2CAwJd;AAAA;;AACb,mBAAKC,aAAL,KACI,KAAKhE,SAAL,CAAeiE,KAAf,EADJ,GAEI,KAAKzB,UAAL,CAAgB5C,IAAhB,CAAqBsE,OAArB,CAA6B,UAACC,GAAD;AAAA,uBAAS,MAAI,CAACnE,SAAL,CAAeoE,MAAf,CAAsBD,GAAtB,CAAT;AAAA,eAA7B,CAFJ;AAGD;AA5J4B;AAAA;AAAA,4CA8JVhB,KA9JU,EA8JKM,MA9JL,EA8J6B;AACxD,qBAAOA,MAAM,CAAC1C,QAAd;AACD;AAhK4B;AAAA;AAAA,sCAkKnB;AACR,kBAAMsD,GAAG,sBAAT;AACA,mBAAKhE,MAAL,CAAYiE,QAAZ,CAAqB,CAACD,GAAD,CAArB;AACD,aArK4B,CAuK7B;AACA;AACA;AACA;;AA1K6B;AAAA;AAAA,2CA4KdhC,EA5Kc,EA4KF;AACzB,qBAAO,KAAKL,QAAL,CAAcuC,IAAd,CAAmB,UAACC,CAAD;AAAA,uBAAOA,CAAC,CAACnC,EAAF,KAASA,EAAhB;AAAA,eAAnB,EAAuCoC,IAA9C;AACD;AA9K4B;AAAA;AAAA,gCAqFR;AACnB,qBAAO,KAAK5D,OAAL,CACJ2C,MADI,CACG,UAACC,MAAD;AAAA,uBAAYA,MAAM,CAACxC,OAAnB;AAAA,eADH,EAEJyD,GAFI,CAEA,UAACjB,MAAD;AAAA,uBAAYA,MAAM,CAAC1C,QAAnB;AAAA,eAFA,CAAP;AAGD;AAzF4B;;AAAA;AAAA,W;;;2BAAlBZ,kB,EAAkB,0J,EAAA,wH,EAAA,6J;AAAA,S;;;gBAAlBA,kB;AAAkB,yC;AAAA;AAAA;8EAiElB,wE,EAAc,I;;8EACd,8D,EAAS,I;;mFAGoB,wE;;;;;;;;;;;;;;sFA9E7B,CACT;AACEwE,mBAAO,EAAE,4FADX;AAEEC,oBAAQ,EAAE;AACRC,wBAAU,EAAE;AADJ;AAFZ,WADS,C;AAOV,mB;AAAA,kB;AAAA,+kH;AAAA;AAAA;ADpEH;;AACE;;AACE;;AAEA;;AAKE;AAAA,uBAAS,IAAAC,OAAA,EAAT;AAAkB,eAAlB;;AAEA;;AACA;;AACF;;AACF;;AAEA;;AACE;;AAKE;;AAQE;;AACA;;AAMF;;AAEA;;AAEA;;AAOE;;AACF;;AAEA;;AAQE;;AACF;;AAEA;;AAaA;;AAYF;;AACA;;AACE;;AACE;;AAOE;;AACE;;AASA;;AASF;;AAGA;;AAyCA;;AACE;;AAQA;;AAiBF;;AAGA;;AACE;;AACA;;AAWF;;AAEA;;AACA;;AAMF;;AAEA;;AAKF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAMF;;AAEA;;AACE;;AAaF;;;;;;AApPqB;;AAAA;;AAUL;;AAAA;;AAIT;;AAAA;;AAcU;;AAAA;;AAEP;;AAAA;;AAgBQ;;AAAA;;AAIV;;AAAA;;AAOU;;AAAA;;AAKV;;AAAA;;AAYA;;AAAA;;AAeE;;AAAA,8FAAQ,YAAR,EAAQ,cAAR;;AA6BE;;AAAA,+FAAwD,cAAxD,EAAwD,mBAAxD;;AAoFE;;AAAA;;AAEF;;AAAA;;AAQF;;AAAA,+GAAmC,UAAnC,EAAmC,YAAnC;;AAqBN;;AAAA;;;;;;uBC/KU,CAAC,mFAAD,EAAgB,8EAAhB;;;AAUD3E,0BAAkB,6DAf9B,6EAe8B,GAAlBA,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;ACtEbmDO;AAAA,YAAM4E,iBAAN;AAAA;AAAA;;;gBAAMA;;;;6BAAAA,iB;AAAiB,W;AAAA,oBAzBnB,CACP,oFADO,EAEP,mGAFO,EAGP,4DAHO,EAIP,iFAJO,EAKP,+FALO,EAMP,qEANO,EAOP,gGAPO,EAQP,8EARO,EASP,sEATO,EAUP,oEAVO,EAWP,6EAXO,EAYP,qEAZO,EAaP,yEAbO,EAcP,qEAdO,EAeP,oEAfO,EAgBP,2DAhBO,EAiBP,2EAjBO,EAkBP,mEAlBO,EAmBP,2FAnBO,EAoBP,yEApBO,EAqBP,qHArBO,EAsBP,qEAtBO,CAyBmB;;;OAAvB;;;4HAAMA,iB,EAAiB;AAAA,yBA1Bb,wEA0Ba;AA1BK,oBAE/B,oFAF+B,EAG/B,mGAH+B,EAI/B,4DAJ+B,EAK/B,iFAL+B,EAM/B,+FAN+B,EAO/B,qEAP+B,EAQ/B,gGAR+B,EAS/B,8EAT+B,EAU/B,sEAV+B,EAW/B,oEAX+B,EAY/B,6EAZ+B,EAa/B,qEAb+B,EAc/B,yEAd+B,EAe/B,qEAf+B,EAgB/B,oEAhB+B,EAiB/B,2DAjB+B,EAkB/B,2EAlB+B,EAmB/B,mEAnB+B,EAoB/B,2FApB+B,EAqB/B,yEArB+B,EAsB/B,qHAtB+B,EAuB/B,qEAvB+B;AA0BL,S;AAHb,O","file":"order-list-list-order-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { VexRoutes } from '../../../../../@vex/interfaces/vex-route.interface';\r\nimport { ListOrderComponent } from './list-order.component';\r\n\r\nconst routes: VexRoutes = [\r\n  {\r\n    path: '',\r\n    component: ListOrderComponent,\r\n    data: {\r\n      toolbarShadowEnabled: true,\r\n    },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ListOrderRoutingModule {}\r\n","<vex-page-layout>\r\n  <vex-secondary-toolbar current=\"Orders List\">\r\n    <vex-breadcrumbs [crumbs]=\"['Orders']\" fxFlex=\"auto\"></vex-breadcrumbs>\r\n\r\n    <button\r\n      class=\"ml-2\"\r\n      color=\"primary\"\r\n      mat-button\r\n      type=\"button\"\r\n      (click)=\"goToNew()\"\r\n    >\r\n      Add Order\r\n      <mat-icon [icIcon]=\"icPlus\"></mat-icon>\r\n    </button>\r\n  </vex-secondary-toolbar>\r\n\r\n  <div @fadeInUp class=\"p-gutter\">\r\n    <div\r\n      class=\"bg-app-bar px-6 h-16 border-b sticky left-0\"\r\n      fxLayout=\"row\"\r\n      fxLayoutAlign=\"start center\"\r\n    >\r\n      <div\r\n        class=\"bg-card rounded-full border px-4\"\r\n        fxFlex=\"400px\"\r\n        fxFlex.lt-md=\"auto\"\r\n        fxHide.xs\r\n        fxLayout=\"row\"\r\n        fxLayoutAlign=\"start center\"\r\n      >\r\n        <ic-icon [icIcon]=\"icSearch\" size=\"20px\"></ic-icon>\r\n        <input\r\n          [formControl]=\"searchCtrl\"\r\n          class=\"px-4 py-3 border-0 outline-none w-full bg-transparent\"\r\n          placeholder=\"Buscar...\"\r\n          type=\"Buscar\"\r\n        />\r\n      </div>\r\n\r\n      <span fxFlex></span>\r\n\r\n      <button\r\n        class=\"ml-4\"\r\n        fxFlex=\"none\"\r\n        fxHide.gt-xs\r\n        mat-icon-button\r\n        type=\"button\"\r\n      >\r\n        <mat-icon [icIcon]=\"icSearch\"></mat-icon>\r\n      </button>\r\n\r\n      <button\r\n        [matMenuTriggerFor]=\"columnFilterMenu\"\r\n        class=\"ml-4\"\r\n        fxFlex=\"none\"\r\n        mat-icon-button\r\n        matTooltip=\"Filter Columns\"\r\n        type=\"button\"\r\n      >\r\n        <mat-icon [icIcon]=\"icFilterList\"></mat-icon>\r\n      </button>\r\n\r\n      <button\r\n        (click)=\"getData()\"\r\n        *ngIf=\"loadingTabla === false\"\r\n        class=\"ml-4\"\r\n        color=\"primary\"\r\n        fxFlex=\"none\"\r\n        mat-mini-fab\r\n        matTooltip=\"Refresh\"\r\n        type=\"button\"\r\n      >\r\n        <mat-icon [icIcon]=\"icRefresh\"></mat-icon>\r\n      </button>\r\n\r\n      <button\r\n        *ngIf=\"loadingTabla === true\"\r\n        class=\"ml-4\"\r\n        color=\"primary\"\r\n        fxFlex=\"none\"\r\n        mat-mini-fab\r\n        matTooltip=\"Cargando..\"\r\n        disabled=\"true;\"\r\n        type=\"button\"\r\n      >\r\n        <mat-icon [icIcon]=\"icLoad\" class=\"animate-spin\"></mat-icon>\r\n      </button>\r\n    </div>\r\n    <mat-tab-group>\r\n      <mat-tab label=\"Table\">\r\n        <table\r\n          @stagger\r\n          [dataSource]=\"dataSource\"\r\n          class=\"w-full\"\r\n          mat-table\r\n          matSort\r\n        >\r\n          <ng-container matColumnDef=\"checkbox\">\r\n            <th *matHeaderCellDef mat-header-cell>\r\n              <mat-checkbox\r\n                (change)=\"$event ? masterToggle() : null\"\r\n                [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                color=\"primary\"\r\n              >\r\n              </mat-checkbox>\r\n            </th>\r\n            <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\r\n              <mat-checkbox\r\n                (change)=\"$event ? selection.toggle(row) : null\"\r\n                (click)=\"$event.stopPropagation()\"\r\n                [checked]=\"selection.isSelected(row)\"\r\n                color=\"primary\"\r\n              >\r\n              </mat-checkbox>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Text Columns -->\r\n          <ng-container\r\n            *ngFor=\"let column of columns; trackBy: trackByProperty\"\r\n          >\r\n            <ng-container\r\n              *ngIf=\"column.type === 'text' && column.property !== 'Telefonias'\"\r\n              [matColumnDef]=\"column.property\"\r\n            >\r\n              <th\r\n                *matHeaderCellDef\r\n                class=\"uppercase\"\r\n                mat-header-cell\r\n                mat-sort-header\r\n              >\r\n                {{ column.label }}\r\n              </th>\r\n              <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\r\n                {{ row[column.property] }}\r\n              </td>\r\n            </ng-container>\r\n\r\n            <ng-container\r\n              *ngIf=\"column.type === 'text' && column.property === 'Telefonias'\"\r\n              [matColumnDef]=\"column.property\"\r\n            >\r\n              <th\r\n                *matHeaderCellDef\r\n                class=\"uppercase\"\r\n                mat-header-cell\r\n                mat-sort-header\r\n              >\r\n                {{ column.label }}\r\n              </th>\r\n              <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>\r\n                <p class=\"smallText\" *ngFor=\"let telefonia of row.Telefonias\">\r\n                  {{ telefonia.name }}\r\n                </p>\r\n              </td>\r\n            </ng-container>\r\n          </ng-container>\r\n\r\n          <!-- Label Column -->\r\n          <ng-container matColumnDef=\"detail\">\r\n            <th\r\n              *matHeaderCellDef\r\n              class=\"uppercase\"\r\n              mat-header-cell\r\n              mat-sort-header\r\n            >\r\n              Detail\r\n            </th>\r\n            <td *matCellDef=\"let row\" mat-cell>\r\n              <div\r\n                (click)=\"$event.stopPropagation()\"\r\n                fxLayoutAlign=\"start center\"\r\n                fxLayoutGap=\"4px\"\r\n              >\r\n                <div\r\n                  *ngFor=\"let field of row.detail\"\r\n                  class=\"rounded px-2 py-1 mr-1 font-medium text-xs\"\r\n                  fxFlex=\"none\"\r\n                  [ngClass]=\"['text-primary', 'bg-primary-light']\"\r\n                  matTooltip=\"Details\"\r\n                >\r\n                  {{ field.amount + \" - \" + getProductName(field.product) }}\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- Action Column -->\r\n          <ng-container matColumnDef=\"actions\">\r\n            <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n            <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\r\n              <button\r\n                (click)=\"$event.stopPropagation()\"\r\n                [matMenuTriggerData]=\"{ Campaign: row }\"\r\n                [matMenuTriggerFor]=\"actionsMenu\"\r\n                mat-icon-button\r\n                type=\"button\"\r\n              >\r\n                <mat-icon [icIcon]=\"icMoreHoriz\"></mat-icon>\r\n              </button>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\r\n          <tr\r\n            *matRowDef=\"let row; columns: visibleColumns\"\r\n            @fadeInUp\r\n            class=\"hover:bg-hover trans-ease-out cursor-pointer\"\r\n            mat-row\r\n          ></tr>\r\n        </table>\r\n\r\n        <mat-paginator\r\n          [pageSizeOptions]=\"pageSizeOptions\"\r\n          [pageSize]=\"pageSize\"\r\n          class=\"sticky left-0\"\r\n        ></mat-paginator>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</vex-page-layout>\r\n\r\n<mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <ng-template let-Campaign=\"Campaign\" matMenuContent>\r\n    <!-- <button mat-menu-item (click)=\"editBot(Campaign)\">\r\n      <mat-icon [icIcon]=\"icEdit\"></mat-icon>\r\n      <span>Edit 2</span>\r\n    </button> -->\r\n  </ng-template>\r\n</mat-menu>\r\n\r\n<mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <button\r\n    (click)=\"toggleColumnVisibility(column, $event)\"\r\n    *ngFor=\"let column of columns\"\r\n    class=\"checkbox-item mat-menu-item\"\r\n  >\r\n    <mat-checkbox\r\n      (click)=\"$event.stopPropagation()\"\r\n      [(ngModel)]=\"column.visible\"\r\n      color=\"primary\"\r\n    >\r\n      {{ column.label }}\r\n    </mat-checkbox>\r\n  </button>\r\n</mat-menu>\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\nimport { Campaign } from '../../../../interfaces/voicebot/campaign.model';\r\n\r\nimport { Gestion } from '../../../../interfaces/voicebot/gestion.model';\r\nimport { Modal } from '../../../../interfaces/utils/Modal';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { TableColumn } from '../../../../interfaces/utils/Table-column';\r\nimport {\r\n  BotResponse,\r\n  ccsStyleByTypeField,\r\n  getNameTypeField,\r\n  OrderResponse,\r\n} from '../../../../interfaces/voicebot/bot-response';\r\nimport { UserData } from '../../../../interfaces/utils/User-data';\r\n\r\nimport icEdit from '@iconify/icons-ic/twotone-edit';\r\nimport icDelete from '@iconify/icons-ic/twotone-delete';\r\nimport icSearch from '@iconify/icons-ic/twotone-search';\r\nimport icAdd from '@iconify/icons-ic/twotone-add';\r\nimport icFilterList from '@iconify/icons-ic/twotone-filter-list';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport icMoreHoriz from '@iconify/icons-ic/twotone-more-horiz';\r\nimport icFolder from '@iconify/icons-ic/twotone-folder';\r\nimport { fadeInUp400ms } from '../../../../../@vex/animations/fade-in-up.animation';\r\n\r\nimport {\r\n  MAT_FORM_FIELD_DEFAULT_OPTIONS,\r\n  MatFormFieldDefaultOptions,\r\n} from '@angular/material/form-field';\r\nimport { stagger40ms } from '../../../../../@vex/animations/stagger.animation';\r\nimport { FormControl } from '@angular/forms';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\n\r\nimport icPlus from '@iconify/icons-ic/baseline-plus';\r\nimport icRefresh from '@iconify/icons-ic/baseline-refresh';\r\nimport icHeadset from '@iconify/icons-ic/twotone-headset';\r\nimport icLoad from '@iconify/icons-ic/twotone-sync';\r\nimport { UtilService } from 'src/app/services/utils/util/util.service';\r\nimport { Router } from '@angular/router';\r\nimport { ProductService } from 'src/app/services/voicebot/bot/bot.service';\r\nimport {\r\n  FieldTypeVoicebot,\r\n  FormProduct,\r\n} from 'src/app/interfaces/voicebot/field-type-voicebot';\r\nimport { WhareService } from 'src/app/services/wharehouse/wharehouse.service';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'list-bot-table',\r\n  templateUrl: './list-order.component.html',\r\n  styleUrls: ['./list-order.component.scss'],\r\n  animations: [fadeInUp400ms, stagger40ms],\r\n  providers: [\r\n    {\r\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\r\n      useValue: {\r\n        appearance: 'standard',\r\n      } as MatFormFieldDefaultOptions,\r\n    },\r\n  ],\r\n})\r\nexport class ListOrderComponent implements OnInit, AfterViewInit {\r\n  layoutCtrl = new FormControl('fullwidth');\r\n\r\n  subject$: ReplaySubject<BotResponse[]> = new ReplaySubject<BotResponse[]>(1);\r\n  data$: Observable<BotResponse[]> = this.subject$.asObservable();\r\n  Campaigns: BotResponse[];\r\n  CampañasArchivada: BotResponse[];\r\n  Gestiones: Gestion[];\r\n  modal: Modal;\r\n\r\n  userData: UserData;\r\n\r\n  loading = true;\r\n  loadingTabla = true;\r\n\r\n  @Input()\r\n  columns: TableColumn<OrderResponse>[] = [\r\n    {\r\n      label: 'Name',\r\n      property: 'name',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['font-bold', 'text-secondary'],\r\n    },\r\n    {\r\n      label: 'Number',\r\n      property: 'number',\r\n      type: 'text',\r\n      visible: true,\r\n      cssClasses: ['font-medium', 'text-secondary'],\r\n    },\r\n    {\r\n      label: 'Detail',\r\n      property: 'detail',\r\n      type: 'badge',\r\n      visible: true,\r\n      cssClasses: ['font-medium', 'text-secondary'],\r\n    },\r\n    { label: 'Actions', property: 'actions', type: 'button', visible: true },\r\n  ];\r\n  pageSize = 10;\r\n  pageSizeOptions: number[] = [10, 15, 20, 25];\r\n\r\n  dataSource: MatTableDataSource<BotResponse> | null;\r\n  selection = new SelectionModel<BotResponse>(true, []);\r\n\r\n  searchCtrl = new FormControl();\r\n\r\n  campaign: Campaign;\r\n\r\n  icFilterList = icFilterList;\r\n  //Iconos\r\n  icEdit = icEdit;\r\n  icSearch = icSearch;\r\n  icDelete = icDelete;\r\n  icAdd = icAdd;\r\n  icMoreHoriz = icMoreHoriz;\r\n  icHeadset = icHeadset;\r\n  icLoad = icLoad;\r\n  icPlus = icPlus;\r\n  icRefresh = icRefresh;\r\n  products: BotResponse[] = [];\r\n\r\n  //Final de iconos\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  //paginatitor archivada\r\n  @ViewChild('categoryPaginator', { read: MatPaginator })\r\n  categoryPaginator: MatPaginator;\r\n\r\n  constructor(\r\n    private botService: ProductService,\r\n    private router: Router,\r\n    private whareHouseService: WhareService\r\n  ) {\r\n    const idWhareHouse = this.whareHouseService.selectedWharehouse$.getValue();\r\n    this.botService\r\n      .listProductsByWhareHouse(idWhareHouse.id)\r\n      .subscribe((response) => {\r\n        this.products = response;\r\n      });\r\n  }\r\n\r\n  get visibleColumns() {\r\n    return this.columns\r\n      .filter((column) => column.visible)\r\n      .map((column) => column.property);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MatTableDataSource();\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    let clase = this;\r\n    this.Campaigns = [];\r\n    this.loading = true;\r\n    const idWhareHouse = this.whareHouseService.selectedWharehouse$.getValue();\r\n    this.botService\r\n      .listOrderByWhareHouse(idWhareHouse.id)\r\n      .subscribe((response) => {\r\n        clase.dataSource.data = response;\r\n        this.loading = false;\r\n        clase.loadingTabla = false;\r\n        this.searchCtrl.valueChanges\r\n          .pipe(untilDestroyed(this))\r\n          .subscribe((value) => this.onFilterChange(value));\r\n      });\r\n  }\r\n\r\n  refreshDatabutton() {\r\n    //TIENR QUE Refrescar\r\n    //alert('Refrescar');\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  removeItemFromDatasoucre(dataSource: any, index: number) {\r\n    const paginator = dataSource.paginatitor;\r\n    dataSource.data.splice(index, 1);\r\n    dataSource.paginator = paginator;\r\n  }\r\n\r\n  onFilterChange(value: string) {\r\n    if (!this.dataSource) {\r\n      return;\r\n    }\r\n    value = value.trim();\r\n    value = value.toLowerCase();\r\n    this.dataSource.filter = value;\r\n  }\r\n\r\n  toggleColumnVisibility(column, event) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    column.visible = !column.visible;\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.data.forEach((row) => this.selection.select(row));\r\n  }\r\n\r\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\r\n    return column.property;\r\n  }\r\n\r\n  goToNew() {\r\n    const url = `/system/order/new`;\r\n    this.router.navigate([url]);\r\n  }\r\n\r\n  // editBot(product: BotResponse) {\r\n  //   const url = `/voicebot/order/${product.id}`;\r\n  //   this.router.navigate([url], { state: product });\r\n  // }\r\n\r\n  getProductName(id: number) {\r\n    return this.products.find((p) => p.id === id).name;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ListOrderRoutingModule } from './list-order-routing.module';\r\nimport { ListOrderComponent } from './list-order.component';\r\nimport { PageLayoutModule } from '../../../../../@vex/components/page-layout/page-layout.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { BreadcrumbsModule } from '../../../../../@vex/components/breadcrumbs/breadcrumbs.module';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { IconModule } from '@visurel/iconify-angular';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { ContainerModule } from '../../../../../@vex/directives/container/container.module';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { ProgressBarModule } from '../../../../../@vex/components/progress-bar/progress-bar.module';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { SecondaryToolbarModule } from 'src/@vex/components/secondary-toolbar/secondary-toolbar.module';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\n\r\n@NgModule({\r\n  declarations: [ListOrderComponent],\r\n  imports: [\r\n    MatProgressBarModule,\r\n    ProgressBarModule,\r\n    CommonModule,\r\n    ListOrderRoutingModule,\r\n    PageLayoutModule,\r\n    FlexLayoutModule,\r\n    BreadcrumbsModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    IconModule,\r\n    FormsModule,\r\n    MatTooltipModule,\r\n    ReactiveFormsModule,\r\n    ContainerModule,\r\n    MatSelectModule,\r\n    SecondaryToolbarModule,\r\n    MatTabsModule,\r\n  ],\r\n})\r\nexport class ListProductModule {}\r\n"]}